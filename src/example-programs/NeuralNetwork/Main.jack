class Main {
    static int brainSize;
    static int populationCount;
    static int seed;
    static int initialX;
    static int initialY;
    static int goalX;
    static int goalY;
    static boolean onlyBest;
    static Array obstacles;

    function void main() {
        do AccelerationVector.init();
        do Population.init();

        let brainSize = 145;
        let populationCount = 60;
        let seed = 5;
        let initialX = 10;
        let initialY = 128;
        let goalX = 500;
        let goalY = 128;
        let onlyBest = true;
        let obstacles = Array.new(512);

        let obstacles[40] = true;
        let obstacles[72] = true;
        let obstacles[104] = true;
        // (Y / 256) * 10 + (X / 16)

        do Util.config(seed);
        do Brain.config(brainSize);
        do Dot.config(initialX, initialY, goalX, goalY, brainSize);
        do Population.config(populationCount, brainSize);

        do Main.refreshDisplay();
        while (~false) {
            if (~Population.allDotsDead()) {
                do Population.update(onlyBest);
            } else {
                do Population.naturalSelection();
                do Main.refreshDisplay();
            }
        }
    }

    function void refreshDisplay() {
        var int i;
        var int tmp;
        var int tmp2;
        do Screen.drawRectangle(goalX - 2, goalY - 2, goalX + 2, goalY + 2);
        // draw obstacles
        // divide the 512x256 grid into 16x16 blocks, with 32 on one row and 16 on one column
        // drawRect(16 * 8, )
        while (i < 512) {
            if (obstacles[i]) {
                let tmp = i / 32;
                let tmp2 = i - (tmp * 32);
                let tmp = tmp * 16;
                let tmp2 = tmp2 * 16;
                do Screen.drawRectangle(tmp2, tmp, tmp2 + 16, tmp + 16);
            }
            let i = i + 1;
        }
        do Output.moveCursor(21, 0);

        do Output.printChar(71);
        do Output.printChar(101);
        do Output.printChar(110);
        do Output.printChar(101);
        do Output.printChar(114);
        do Output.printChar(97);
        do Output.printChar(116);
        do Output.printChar(105);
        do Output.printChar(111);
        do Output.printChar(110);
        do Output.printChar(58);
        do Output.printChar(32);
        do Output.printInt(Population.getGen());

        do Output.moveCursor(22, 0);

        do Output.printChar(71);
        do Output.printChar(111);
        do Output.printChar(97);
        do Output.printChar(108);
        do Output.printChar(32);
        do Output.printChar(115);
        do Output.printChar(116);
        do Output.printChar(101);
        do Output.printChar(112);
        do Output.printChar(32);
        do Output.printChar(99);
        do Output.printChar(111);
        do Output.printChar(117);
        do Output.printChar(110);
        do Output.printChar(116);
        do Output.printChar(58);
        do Output.printChar(32);
        if (Dot.getMinStep() = 32767) {
            do Output.printChar(78);
            do Output.printChar(65);
        } else {
            do Output.printInt(Dot.getMinStep());
        }
    }
}