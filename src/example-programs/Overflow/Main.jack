/**
 * This program is quite a special one! We're going to deliberately cause a
 * stack overflow to perform a virtual machine escape. It leverages the fact
 * that there are no runtime checks to prevent a stack overflow. No modern
 * platform will let you do this :-)
 *
 * Run this on an empty RAM (reload the page) for the best effect
 */
class Main {
    function void main() {
        do Main.foo();
        // Uh oh, we're going to overflow the stack!
        do Main.main();
    }

    function void foo() {
        var int b;
        var int c;
        do Output.moveCursor(0, 0);
        // Print out the stack pointer. We'll start to have problems when this
        // number exceeds 2048 and invades the memory region reserved for the
        // heap. The print statement will malfunction in explosive fashion!
        do Output.printInt(Memory.peek(0));
        // Just minding some of our own business... nothing much to see here
        let b = 0;
        while (b > 0) {
            let b = b * c;
            let c = b * c * c;
        }
        while (b < 10) {
            let b = b - 1500;
        }
    }
}
