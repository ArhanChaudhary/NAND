class _2048 {
    static int gridX, gridY;
    static int size;
    static int randomPosition;
    field Array grid;

    function void init() {
        let gridX = 5;
        let gridY = 5;
        let size = 4;
        let randomPosition = (-1);
        return;
    }

    constructor _2048 new() {
        var int i;
        var int j;
        var Array tmp;
        let grid = Array.new(4);
        let i = 0;
        while (i < size) {
            let tmp = Array.new(4);
            let grid[i] = tmp;
            let j = 0;
            while (j < size) {
                let tmp[j] = 0;
                let j = j + 1;
            }
            let i = i + 1;
        }
        return this;
    }

    method void run() {
        var int key;
        var boolean exit;

        let exit = false;
        while (~exit) {
            do setRandomPosition();
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }
            if (key = 131) {
                do moveGrid(1); // up
            }
            if (key = 133) {
                do moveGrid(2); // down
            }
            if (key = 130) {
                do moveGrid(3); // left
            }
            if (key = 132) {
                do moveGrid(4); // right
            }
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }
        }
        do drawGrid();
        return;
    }

    method void moveGrid(int direction) {

    }

    method void drawGrid() {
        var int i;
        var int j;
        var Array tmp;
        let i = 0;
        while (i < size) {
            let tmp = grid[i];
            let j = 0;
            while (j < size) {
                do Output.printInt(tmp[j]);
                let j = j + 1;
            }
            do Output.println();
            let i = i + 1;
        }
        return;
    }

    method void setRandomPosition() {
        var int randomPositionValue;
        let randomPosition = randomPosition + 1;
        let randomPositionValue = getPosition(randomPosition);
        if (randomPositionValue = 0) {
            do setPosition(randomPosition, 2);
            return;
        }
        do setRandomPosition();
        return;
    }

    method int getPosition(int pos) {
        var int div;
        var int mod;
        var Array tmp;
        let div = pos / 4;
        let mod = pos - (div * 4);

        let tmp = grid[div];
        return tmp[mod];
    }

    method void setPosition(int pos, int value) {
        var int div;
        var int mod;
        var Array tmp;
        let div = pos / 4;
        let mod = pos - (div * 4);

        let tmp = grid[div];
        let tmp[mod] = value;
        return;
    }

    method void dispose() {
        var int i;
        var Array tmp;
        let i = 0;
        while (i < size) {
            let tmp = grid[i];
            do tmp.dispose();
            let i = i + 1;
        }
        do Memory.deAlloc(this);
        return;
    }
}